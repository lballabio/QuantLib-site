---
layout: default
title: QuantLib Extensions
---

<h1 class="center">QuantLib Extensions</h1>

<br>

<h2 class="center">Official wrappers for other languages</h2>

<p>QuantLib is <a href="download.shtml">available</a> as a C#,
Java, Python and R module by means of <a
href="http://swig.org/">SWIG</a>.<br>

<p><a href="http://quantlibaddin.org">QuantLibAddin</a> exports a
procedural interface to a number of platforms including Microsoft
Excel (see the <a href="http://quantlibxl.org">QuantLibXL</a> site)
and OpenOffice/LibreOffice Calc.</p>

<h2 class="center">External projects</h2>

<h3 class="center">Adjoint Algorithmic Differentiation (AAD) support</h3>

<p>Adjoint algorithmic differentiation (AAD) can be enabled in QuantLib
using the open-source <a href="https://github.com/xcelerit/XAD">XAD
AAD tool</a> and
<a href="https://github.com/xcelerit/qlxad">an XAD/QuantLib
integration module</a>.  QuantLib's AAD-compatibility is actively
maintained
via <a href="https://github.com/xcelerit/qlxad/actions/workflows/ci.yaml">automated
CI/CD checks</a>, running daily against QuantLib's master branch.
</p>

<p>Another AAD-enabled version is offered by MatLogica and
uses <a href="https://matlogica.com/practical-AAD-QuantLib-XVA-demo.php#quantlibModal">their
AADC JIT compiler</a> to enable fast AAD risks and to speed up forward
repetitive calculations by automated multithreading and
vectorization.</p>

<p>Yet another modified QuantLib C++ library enabling AAD is available
as <a href="https://github.com/compatibl/QuantLibAdjoint">an
open-source project from CompatibL</a>.</p>

<h3 class="center">Ports and wrappers for other languages</h3>

<p>The <a href="https://github.com/lcallenbach/quantlibaddin">LibreOffice
QuantLib Addin</a> project, based on QuantLibAddin, exports QuantLib
to Calc.</p>

<p>Idiomatic GNU R support is provided by means of <a href=
"http://dirk.eddelbuettel.com/code/rquantlib.html">RQuantLib</a> by
Dirk Eddelbuettel.</p>

<p><a href="http://www.deriscope.com/index.html">Deriscope</a> is
another project that aims at exporting QuantLib functionality to
Excel.</p>

<p>An initial web API for QuantLib (also usable from Google Sheets) is
available from <a href="https://quantra.io/">quantra.io</a>.</p>

<p>A project for porting QuantLib to C# has started
as <a href="https://github.com/amaggiulli/qlnet">QLNet</a> and is
looking for developers.</p>

<p>The <a href="http://www.jquantlib.org/">JQuantLib</a> project is a
Java port.</p>

<p>An alternative set of Python wrappers is provided in
the <a href="https://github.com/enthought/pyql">PyQL</a> project by
Didrik Pinte and Patrick Henaff.</p>

<p><a href="https://github.com/pazzo83/QuantLib.jl">QuantLib.jl</a> is
a port of QuantLib to the Julia language. The project is in its
initial stages and welcomes contributions.</p>

<p>An initial port to Rust is available
from <a href="https://github.com/piquette/quantlib">https://github.com/piquette/quantlib</a>.</p>

<p>Bindings for Node.js are available from
the <a href="https://github.com/quantlibnode/quantlibnode">quantlibnode</a>
project. Another (closed-source) JavaScript implementation is available
as <a href="https://quantlib.js.org/">quantlib.js</a>.</p>

<p><a href="https://code.google.com/p/qldds/">QLDDS</a> is a project
that allows the functionality of the QuantLibAddin for C++ to be
distributed via OpenDDS across multiple computers running different
operating systems.</p>

<p>Other projects aim at ports in a functional language.
<a href="http://sourceforge.net/projects/quanthas/">QuantHas</a>
targets the Haskell language,
while <a href="http://sourceforge.net/projects/quantifa/">Quantifa</a>
is written in F#; they are looking for
developers. <a href="https://github.com/paulrzcz/hquantlib">HQuantLib</a>
is another Haskell
port.  <a href="http://ql.codeplex.com/">Cephei.QL</a> wraps the C++
library so that it can be called from F#.
</p>

<p>Niels Elken S&oslash;nderby has a page for the tentative
Mathematica project <a href=
"http://www.nielses.dk/quantlib/mma/">QuantLibMma</a>.  Another
unrelated Mathematica extension wrapping QuantLib functionality can be
found at the <a href=
"http://www.weber-und-partner.com/QuantLib/mma/">Weber und Partner</a>
site.</p>

<p>Finally,
the <a href="http://www.dsource.org/projects/quantlibd/">QuantLibD</a>
project is a port of QuantLib in the D programming language.  The
project is looking for developers.</p>

