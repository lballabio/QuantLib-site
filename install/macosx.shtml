---
layout: default
title: QuantLib Installation on Mac OS X
---

<h1 class="center">QuantLib installation on Mac OS X</h1>
<h4 class="center">Jack Harvard</h4>

<h2>Boost Installation</h2>

<p>The preferred way to get Boost is through Homebrew
(<a href="http://brew.sh/">http://brew.sh/</a>). By default, Homebrew
will install Boost in /usr/local. From Terminal, run:
<pre>
brew install boost
</pre>

<p>Alternatively, you can use MacPorts
(<a href="http://www.macports.org/">http://www.macports.org/</a>)
which installs in /opt/local instead.</p>

<h2>QuantLib Installation</h2>

<h3>Installation from Homebrew</h3>

<p>If you don't need to modify the library, you might want to skip the
compilation and install a precompiled binary version.  Unofficial
binaries are available from Homebrew; run</p>
<pre>
  brew install quantlib
</pre>
<p>to install it.  If you want to modify the library,
instead, you'll have to compile it yourself as described in the next
section.</p>

<h3>Installation from a released version</h3>

<p>Download QuantLib from its download page on GitHub, located
at <a href="https://github.com/lballabio/QuantLib/releases">https://github.com/lballabio/QuantLib/releases</a>.
You want to download the tar.gz package (at the time of this writing,
1.8 is the latest version) and extract it by running
<pre>
tar xzvf QuantLib-1.8.tar.gz
</pre>
in Terminal.  To install QuantLib, enter the folder you just created:
<pre>
cd QuantLib-1.8
</pre>
</p>

<p><strong>On Mac OS X 10.11 (El Capitan) and later,</strong> you'll
need to pass additional environment variables to <tt>./configure</tt>
(thanks to Albert Azout for pointing it out). Run:
<pre>
./configure --with-boost-include=/usr/local/include/ \
            --with-boost-lib=/usr/local/lib/ --prefix=/usr/local/ \
            CXXFLAGS='-O2 -stdlib=libc++ -mmacosx-version-min=10.9' \
            LDFLAGS='-stdlib=libc++ -mmacosx-version-min=10.9'
</pre>
(mind the backslash on the end of the lines; it tells the terminal to
continue on the next line.  You might also discard the backslash and
write the whole command on a single line.) If your Boost installation
is not in <tt>/usr/local</tt>, change the paths above accordingly.
</p>
<p><strong>On Mac OS X 10.9 (Mavericks) and 10.10 (Yosemite),</strong>
you'll need to pass different environment variables. Run:
<pre>
./configure --with-boost-include=/usr/local/include/ \
            --with-boost-lib=/usr/local/lib/ --prefix=/usr/local/ \
            CXXFLAGS='-O2 -stdlib=libstdc++ -mmacosx-version-min=10.6' \
            LDFLAGS='-stdlib=libstdc++ -mmacosx-version-min=10.6'
</pre>
</p>
<p><strong>On earlier systems,</strong> it's not necessary to pass
environment variables, so the command can be simplified to:
<pre>
./configure --with-boost-include=/usr/local/include/ \
            --with-boost-lib=/usr/local/lib/ --prefix=/usr/local/
</pre>
Again, if your Boost installation is not in <tt>/usr/local</tt>,
change the paths above accordingly.
</p>
<p><strong>Also, if you only intend to build the QuantLib Python
module</strong>, you might want to pass the <tt>--disable-shared</tt>
option to <tt>./configure</tt> to only build a static library and
avoid problems with dynamic loading.</p>

<p>Finally, run:</p>
<pre>
make
</pre>
and
<pre>
sudo make install
</pre>
and then try to compile the examples. For example,
<pre>
cd Examples/BermudanSwaption
g++ -I/usr/local/include/ -I/usr/local/include/boost BermudanSwaption.cpp \
    -o bermudanswaption -L/usr/local/lib/ -lQuantLib
</pre>
Note that you might have to add more flags to the command above: some
users report it working as is, while others report having to add the
same <tt>-stdlib</tt> and <tt>-mmacosx-version-min</tt> used in the
compilation of QuantLib.  Also, if you installed QuantLib in some
non-default prefix such as <tt>/opt/local</tt>, you might have to add
corresponding include and library flags; in this case, they would
be <tt>-I/opt/local/include</tt> and <tt>-L/opt/local/lib</tt>.
</p>

<p>The whole process can take quite some time if installing both
Boost and QuantLib.</p>

<h2>Appendix: Boost Configuration</h2>

<p>If you want to make the Boost headers and libraries available to
all C++ projects, edit ~/.bash_profile and add the following lines
into the file:
<pre>
export CPLUS_INCLUDE_PATH=/usr/local/include
export C_INCLUDE_PATH=/usr/local/include
export DYLD_LIBRARY_PATH=/usr/local/lib
</pre>
When this is done, restart the terminal.  After this, no include (-I)
or link (-L) directory needs to be specified when compiling with g++.</p>

