---
layout: default
title: QuantLib-Python Installation on Windows
---

<h1 class="center">QuantLib-Python installation on Windows</h1>

<h2>Installation from PyPI</h2>

<p>If you don't need to modify the wrappers, you might want to try
installing a precompiled binary version.  The availability of binaries
  depend on your operating system; to try to install them, run:
<pre>
  python -m pip install QuantLib
</pre>
with the version of Python you want to use QuantLib with.
If a binary package is available for your system, it will be
installed and you should be able to leave this page and use it right
away (if, after installation, you get an error about a missing DLL
when you try to import it, you might have to install the
<a href="https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0">Microsoft Visual C++ Redistributable</a>).</p>

<p>If the above doesn't work, you'll have to
compile it yourself as described in the next section.</p>

<h2>Installation from a released version</h2>

<p>The following assumes that you already installed QuantLib. Instructions for that are available
at <a href="http://quantlib.org/install/vc10.shtml">http://quantlib.org/install/vc10.shtml</a>.
Note that QuantLib must be compiled in Release mode (choose Win32 or x64 depending on the
version of Python you're using).</p>

<p>You can download released QuantLib-SWIG versions from GitHub
at <a href="https://github.com/lballabio/QuantLib-SWIG/releases">https://github.com/lballabio/QuantLib-SWIG/releases</a>.</p>

<p>Once you have the zip file, extract it to obtain a folder with a
name like <code>QuantLib-SWIG-1.9</code> (1.9 is the most recent
version at the time of this writing; you might have downloaded another
one, but take care to use one compatible with the version of QuantLib
you installed.)</p>

<p>Contrary to popular belief, working from a released
tarball <strong>doesn't require you to have SWIG
installed</strong>.</p>

<p>If you have the version of Visual Studio corresponding to your
Python installation, it's very likely that the Python setup
infrastructure will find it without need for you to set up the
additional configurations described in how-to posts across the
web. The Visual Studio versions used to compile each Python version,
and thus also recommended for compiling additional modules, are Visual
Studio 9 (2008) for Python 2.7 and 3.0 to 3.2; Visual Studio 10 (2010)
for Python 3.3 and 3.4; and Visual Studio 14 (2015) for Python 3.5 and
later.  Of course, you'll need QuantLib compiled with the same Visual
Studio version; you'll also need it compiled as a 32-bit or 64-bit
binary to match your Python installation.</p>

<p>To compile the Python module, open a command prompt, and enter the
Python folder inside the folder you unzipped. Next, set the
environment variables <code>QL_DIR</code> and <code>INCLUDE</code> to
the location of your QuantLib and Boost installations,
respectively. Assuming, for example, that you installed Boost
in <code>C:\local\boost_1_64_0</code>, QuantLib
in <code>C:\local\QuantLib-1.9</code>, and QuantLib-SWIG
in <code>C:\local\QuantLib-SWIG-1.9</code>, the commands would be:
<pre>
  cd C:\local\QuantLib-SWIG-1.9\Python
  set QL_DIR=C:\local\QuantLib-1.9
  set INCLUDE=C:\local\boost_1_64_0
</pre>
Once you've done this, you can run the actual build command, which is:
<pre>
  python setup.py build
</pre>
The script will find the compiler and build the module.  Again, this
requires a specific version of Visual Studio as mentioned above.
</p>

<p class="center"><img src="pics/pywin/cmd.png" alt="Command prompt"></p>

<p>Once you're done, you can try to run a few examples to check the
compiled module. To do this, you can execute:
<pre>
  python setup.py test
</pre>
Finally, the command
<pre>
  python setup.py install
</pre>
will deploy the compiled module to your Python installation directory.</p>

<h2>Installation from a git repository</h2>

<p>If you want to compile from a checkout of a git repository (such as
the official one
at <a href="https://github.com/lballabio/quantlib-swig">https://github.com/lballabio/quantlib-swig</a>,
or a fork of it that you might have created) you'll need an additional
step at the beginning of the process. In this case, you'll need SWIG
available; you can download and install it
from <a href="http://swig.org">http://swig.org</a>. Once SWIG is in
your path, run:
<pre>
  python setup.py wrap
</pre>
from the Python directory in which you'll build the module. The rest
of the installation goes as above.</p>

